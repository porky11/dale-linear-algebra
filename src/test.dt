(import stdlib)
(import linear-algebra)

(std.concepts.instantiate Matrix int 5 5)
(std.concepts.instantiate + (Matrix int 5 5))
(std.concepts.instantiate * (Matrix int 5 5))


(def zero
  (fn intern void ((m (ref (Matrix int 5 5))))
    (for (i int 0) (< i 5) (incv i)
      (for (j int 0) (< j 5) (incv j)
        (setf (# (@$' (@:@ m elements) i j)) 0)))))

(def main (fn extern-c int (void)
  (printf "hello\n")
  (def a (var auto (Matrix int 5 5)))
  (def b (var auto (Matrix int 5 5)))
  (zero a)
  (identity-matrix b)
  (setf (# (@$' (@: a elements) 1 1)) 10)
  (setf (# (@$' (@: a elements) 3 3)) 20)
  (setf (# (@$' (@: b elements) 2 2)) 10)
  (print a)
  (printf "\n")
  (print b)
  (printf "\n")
  (setv a (* a 5))
  (setv a (+ a b))
  (print a)
  (printf "\n")
  0))
